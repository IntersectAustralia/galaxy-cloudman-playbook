---

- name: Stop Galaxy
  shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
  ignore_errors: true

- name: Stop PostgreSQL
  shell: "{{ postgresql_bin_dir }}/pg_ctl -D {{ galaxy_db_dir }} stop"
  sudo_user: postgres
  ignore_errors: true

- name: Delete Galaxy log files
  shell: rm -f {{ galaxy_server_dir }}/*.log*
  ignore_errors: true

- name: Clear out Galaxy's tmp folder
  shell: rm -rf {{ galaxyFS_base_dir }}/tmp/*
  ignore_errors: true

- name: Create Galaxy archive target directory
  file: dest={{ galaxy_archive_path }} owner={{ galaxy_user_name }} group={{ galaxy_user_name }} state=directory
  sudo_user: root

- name: Remove the existing file system archive
  file: dest="{{ galaxy_archive_path }}/{{ galaxy_archive_name }}" state=absent  #"

- name: Create a new filesystem archive
  command: chdir={{ galaxyFS_base_dir }} tar -czf {{ galaxy_archive_path }}/{{ galaxy_archive_name }} -C {{ galaxyFS_base_dir }} .
  sudo_user: root

- name: Install s3cmd library
  pip: name=s3cmd
  sudo_user: root

- name: Upload timestamped filesystem archive
  command: s3cmd --access_key={{ aws_access_key }} --secret_key={{ aws_secret_key }} --reduced-redundancy --acl-public put {{ galaxy_archive_path }}/{{ galaxy_archive_name }} s3://{{ galaxy_archive_bucket }}/{{ galaxy_timestamped_archive_name }}

- name: Upload filesystem archive
  command: s3cmd --access_key={{ aws_access_key }} --secret_key={{ aws_secret_key }} --reduced-redundancy --acl-public put {{ galaxy_archive_path }}/{{ galaxy_archive_name }} s3://{{ galaxy_archive_bucket }}/

- name: Get the archive MD5 sum
  shell: "md5sum {{ galaxy_archive_path }}/{{ galaxy_archive_name }} | cut -f 1 -d' '"
  register: md5
  ignore_errors: true

# Display MD5 sum for the created archive
- debug: msg="{{ md5.stdout }}"
  ignore_errors: true

- name: Galaxy - Install openstack swift packages
  pip: name={{ item }} virtualenv="{{ galaxy_venv_dir }}"
  with_items:
    - python-swiftclient
    - python-keystoneclient

- name: Galaxy - Upload filesystem archive
  command: chdir={{ galaxy_archive_path }} {{ galaxy_venv_dir }}/bin/swift upload {{ cm_bucket_name }} {{ galaxy_archive_name }} --object-name {{ galaxy_timestamped_archive_name }}
  environment:
     OS_AUTH_URL: "{{ os_auth_url }}"
     OS_TENANT_ID: "{{ os_tenant_id }}"
     OS_TENANT_NAME: "{{ os_tenant_name }}"
     OS_USERNAME: "{{ os_username }}"
     OS_PASSWORD: "{{ os_password }}"
